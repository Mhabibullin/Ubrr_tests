package ru.ubrr.tests;

import org.assertj.core.api.AssertionsForClassTypes;
import ru.ubrr.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.TimeZone;
import com.codeborne.selenide.*;
import org.openqa.selenium.Keys;

import static com.codeborne.selenide.Selenide.open;
import static com.codeborne.selenide.Selenide.title;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;
import static com.codeborne.selenide.CollectionCondition.*;
import static com.codeborne.selenide.Condition.*;
import static com.codeborne.selenide.Selectors.*;
import static com.codeborne.selenide.Selenide.*;

public class MainPageTests extends TestBase {
    SimpleDateFormat formatDate = new SimpleDateFormat("dd.MM.yyyy");
    Date date = new Date();

    @Test
    @Description("Currency displayed date should be actual")
    @DisplayName("Currency Date Test")
    void currencyDateTest(){

        step("Open url 'https://www.ubrr.ru/'", () -> {
            open("https://www.ubrr.ru/");
        });

        step("Get actual date", () -> {
            this.formatDate.setTimeZone(TimeZone.getTimeZone("Russia/Moscow"));
        });

        step("Assert that date on page is actual", () -> {
            $(".currency__caption").shouldHave(text("Обновлено " + formatDate.format(date)));
        });
    }


    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("Ubrr")
    void generatedTest() {
        step("Open 'https://www.ubrr.ru/'", () -> {
            step("// todo: just add selenium action");
        });

        step("Check text 'Станьте клиентом банка'", () -> {
            step("// todo: just add selenium action");
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://www.ubrr.ru/'", () ->
            open("https://www.ubrr.ru/"));

        step("Page title should have text 'Банк «УБРиР» (ПАО) — кредитные карты, потребительские кредиты, дебетовые карты, вклады, ипотека, рко, эквайринг'", () -> {
            String expectedTitle = "Банк «УБРиР» (ПАО) — кредитные карты, потребительские кредиты, дебетовые карты, вклады, ипотека, рко, эквайринг";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://www.ubrr.ru/'", () ->
            open("https://www.ubrr.ru/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}